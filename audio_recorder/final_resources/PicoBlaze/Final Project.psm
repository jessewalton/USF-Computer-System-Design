;J1 //put the words here
;J2 // settinngs  r/w e rs

CONTROL DSIN $0A ;// 4bit input
READY_SIG DSIN $0B
MEM_FULL DSIN $0C

COMMAND DSOUT $0D
FILE DSOUT $E
VOLUME_OUT DSOUT $0F

LCD_OUT DSOUT $1A



 MENU_STATE EQU s1
 FILE_STATE EQU s2
 TWO_STATE EQU s3
 MASTER_STATE EQU s4
 
 SEANS_CONSTANT EQU s5
 
 VOLUME EQU s6
 
 LCD_BUILD EQU s7

 READY_REG EQU s9
 COMMAND_REG EQU sA
 FILE_REG EQU sB


 CONTROLREG EQU s0
 
 
;///////MAIN MENU//////////////////

;///////MAIN MENU CONTROL//
LOAD COMMAND_REG, 255
OUT COMMAND_REG, COMMAND
CALL PUSH;********************************************************

MAIN_MENU_RS:
LOAD MENU_STATE, 0
MAIN_MENU:

LOAD MASTER_STATE, 0



CALL WAIT_STATE

CALL INPUT_LOADER





COMP CONTROLREG, 1
JUMP Z, UP_MAIN
COMP CONTROLREG, 2
JUMP Z, DOWN_MAIN
COMP CONTROLREG, 4
JUMP Z, BACK
COMP CONTROLREG, 8
JUMP Z, SELECT_MAIN

JUMP MAIN_MENU
;///////////////////////////MAIN UP/DOWN//////////////////

UP_MAIN:
COMP MENU_STATE, 4
JUMP NZ, UP_GOOD
JUMP MAIN_MENU
UP_GOOD:
ADD MENU_STATE, 1
CALL PUSH;********************************************************************
JUMP MAIN_MENU

DOWN_MAIN:
COMP MENU_STATE, 0
JUMP NZ, DOWN_GOOD
JUMP MAIN_MENU
DOWN_GOOD:
SUB MENU_STATE, 1
CALL PUSH;*********************************************************************
JUMP MAIN_MENU
;//////////////////////////////SELECT MAIN/////////////////

SELECT_MAIN:                 ;ROUTES TO MASTER SWITCH
COMP MENU_STATE, 0
JUMP Z, MASTER_PLAY
COMP MENU_STATE, 1
JUMP Z, MASTER_RECORD
COMP MENU_STATE, 2
JUMP Z, MASTER_DELETE
COMP MENU_STATE, 3
JUMP Z, MASTER_DEL_ALL
COMP MENU_STATE, 4
JUMP Z, MASTER_VOL






;///////MASTER SWITCH////////////////
MASTER_MENU:
LOAD MASTER_STATE, 0
CALL PUSH;***************************
JUMP MAIN_MENU_RS

MASTER_PLAY:
LOAD MASTER_STATE,1
CALL PUSH;***************************
JUMP FILE_MENU_RS

MASTER_RECORD:
LOAD MASTER_STATE,2
CALL PUSH;***************************
JUMP FILE_MENU_RS

MASTER_DELETE:
LOAD MASTER_STATE,3
CALL PUSH;***************************
JUMP FILE_MENU_RS

MASTER_PLAYING:
LOAD MASTER_STATE,4
CALL PUSH;***************************
JUMP TWO_OPTION_MENU_RS

MASTER_DELETING:
LOAD MASTER_STATE,5
CALL PUSH;***************************
JUMP TWO_OPTION_MENU_RS

MASTER_VOL:
LOAD MASTER_STATE,6
CALL PUSH;***************************
JUMP TWO_OPTION_MENU_RS

MASTER_DEL_ALL:
LOAD MASTER_STATE,7
CALL PUSH;***************************
JUMP TWO_OPTION_MENU_RS

MASTER_PAUSED:
LOAD MASTER_STATE,8
CALL PUSH;***************************
JUMP ONE_OPTION_MENU

MASTER_RECORDING:
LOAD MASTER_STATE, 9
CALL PUSH;***************************
JUMP ONE_OPTION_MENU






;///////FILE_MENU CONTROL////////////////////////////////////
FILE_MENU_RS:
LOAD FILE_STATE, 0
FILE_MENU:

CALL WAIT_STATE

CALL INPUT_LOADER


COMP CONTROLREG, 1
JUMP Z, UP_FILE
COMP CONTROLREG, 2
JUMP Z, DOWN_FILE
COMP CONTROLREG, 4
JUMP Z, BACK
COMP CONTROLREG, 8
JUMP Z, SELECT_FILE

JUMP FILE_MENU






;////////////////////////FILE UP/DOWN///////////////////////////////////////

UP_FILE:
COMP FILE_STATE, 7
JUMP NZ, UP_FILE_GOOD ;if file number isnt max
JUMP FILE_MENU        ; otherwise return

UP_FILE_GOOD:
ADD FILE_STATE, 1
CALL PUSH;*******************************
JUMP FILE_MENU

DOWN_FILE:
COMP FILE_STATE, 0
JUMP NZ, DOWN_FILE_GOOD ;if file number isnt min
JUMP FILE_MENU          ; other wise return

DOWN_FILE_GOOD:
SUB FILE_STATE, 1
CALL PUSH;********************************
JUMP FILE_MENU





;//////////////////SELECT_FILE/////////////////////////
SELECT_FILE:
COMP MASTER_STATE, 1
JUMP Z, PLAY_MESSAGE
COMP MASTER_STATE, 2
JUMP Z, RECORD_MESSAGE
COMP MASTER_STATE, 3
JUMP Z, MASTER_DELETING



;//////////////////////SKIP////////////////////////////
SKIP:
COMP FILE_STATE, 7
JUMP Z,WRAP
ADD FILE_STATE,1
WRAP:
LOAD FILE_STATE, 0
JUMP PLAY_MESSAGE


;//////////////////////PLAY///////////////////////////
PLAY_MESSAGE:
LOAD COMMAND_REG, 1
CALL SEND_COMMAND_PRD
JUMP MASTER_PLAYING


;/////////////////////RECORD//////////////////////////
RECORD_MESSAGE:
LOAD COMMAND_REG, 3
CALL SEND_COMMAND_PRD
JUMP MASTER_RECORDING


;/////////////////////DELETE//////////////////////////
DELETE_MESSAGE:
LOAD COMMAND_REG, 4
CALL SEND_COMMAND_PRD
JUMP BACK


;////////////////////TWO OPTION MENU///for pause/skip, yes/no ,vol up/vol down
TWO_OPTION_MENU_RS:
LOAD TWO_STATE,0
TWO_OPTION_MENU:

CALL WAIT_STATE
CALL INPUT_LOADER

COMP CONTROLREG, 1
JUMP Z, TWO_OPT_FLIP
COMP CONTROLREG, 2
JUMP Z, TWO_OPT_FLIP
COMP CONTROLREG, 4
JUMP Z, BACK
COMP CONTROLREG, 8
JUMP Z, SELECT_TWO_OPT

JUMP TWO_OPTION_MENU

;////////////////////////TWO OPT UP/DOWN///////////////
TWO_OPT_FLIP:

COMP TWO_STATE, 0
JUMP Z, TWO_STATE_UP
JUMP Z, TWO_STATE_DOWN

TWO_STATE_UP:
LOAD TWO_STATE,1
CALL PUSH;*************************************
JUMP TWO_OPTION_MENU

TWO_STATE_DOWN:
LOAD TWO_STATE,0
CALL PUSH;************************************
JUMP TWO_OPTION_MENU





;//////////////////////TWO OPT SELECT//////////////////
SELECT_TWO_OPT:
COMP MASTER_STATE,4 ; playing
JUMP Z, PAUSE_SKIP
COMP MASTER_STATE,5 ; deleting
JUMP Z, YES_NO
COMP MASTER_STATE,6 ; volume
JUMP Z, UP_DOWN
COMP MASTER_STATE,7 ; deleting all
JUMP Z, YES_NO_ALL

PAUSE_SKIP:
COMP TWO_STATE,0
JUMP Z, PAUSE
COMP TWO_STATE,1
JUMP Z, SKIP

YES_NO:
COMP TWO_STATE,0
JUMP Z, BACK
COMP TWO_STATE,1
JUMP Z, DELETE_MESSAGE

YES_NO_ALL:
COMP TWO_STATE,0
JUMP Z, BACK
COMP TWO_STATE,1
JUMP Z, DELETE_ALL

UP_DOWN:
COMP TWO_STATE,0
JUMP Z, VOL_UP
COMP TWO_STATE,1
JUMP Z, VOL_DOWN

;//////////////////////VOL UP/DOWN////////////////////////////
VOL_UP:
COMP VOLUME, 31
JUMP NZ, UP_VOL



VOL_DOWN:
COMP VOLUME,0
JUMP NZ, DOWN_VOL

UP_VOL:
ADD VOLUME,1
OUT VOLUME, VOLUME_OUT
JUMP TWO_OPTION_MENU
DOWN_VOL:
SUB VOLUME,1
OUT VOLUME, VOLUME_OUT
JUMP TWO_OPTION_MENU
;//////////////////////////////////////////////////




;/////////////////////PAUSE///////////////////////////////////////
PAUSE:
LOAD COMMAND_REG, 2
CALL SEND_COMMAND_PRD
JUMP MASTER_PAUSED

;/////////////////////DELETE_ALL////////////////////////////
DELETE_ALL:
LOAD COMMAND_REG, 5
CALL SEND_COMMAND_PRD
JUMP BACK

;////////////////////////ONE_OPTION/////////////////////////
ONE_OPTION_MENU:
CALL WAIT_STATE
CALL INPUT_LOADER
COMP CONTROLREG,1
JUMP Z, ONE_OPT_SEL
JUMP ONE_OPTION_MENU


ONE_OPT_SEL:
COMP MASTER_STATE,8
JUMP Z, PLAY_MESSAGE ;RESUME!!!
COMP MASTER_STATE,9
JUMP Z, STOP
JUMP ONE_OPTION_MENU

;/////////////////STOP!!!!!//////////////
STOP:
LOAD SEANS_CONSTANT,0
OUT SEANS_CONSTANT, COMMAND
JUMP BACK






;/////////////////////////BACK!!!!///////////////
BACK:              ;ONE BACK TO RULE THEM ALL!!!!
JUMP MAIN_MENU_RS





;//////////////////SEND_COMMAND  P/R/D   ///////////////////////////////////
SEND_COMMAND_PRD:
OUT FILE_STATE,FILE
LOAD SEANS_CONSTANT,0
OUT SEANS_CONSTANT, COMMAND
READY_WAIT:
IN READY_REG,READY_SIG
COMP READY_REG, 1
JUMP NZ, READY_WAIT
OUT COMMAND_REG, COMMAND






;//////////WAIT STATE///////////////////////////
WAIT_STATE:
IN CONTROLREG, CONTROL
COMP CONTROLREG, 0          ;wait state
JUMP NZ, WAIT_STATE
RET





;////////INPUT LOADER/////////////
INPUT_LOADER:
IN CONTROLREG, CONTROL ;ADD USB SHIT HERE!!!!!
RET


;//////////LCD_PUSH//////////////
PUSH:
LOAD LCD_BUILD, MASTER_STATE
SL0 LCD_BUILD
SL0 LCD_BUILD
SL0 LCD_BUILD
SL0 LCD_BUILD
COMP MASTER_STATE,0
JUMP Z, MAIN_PUSH
COMP MASTER_STATE,1
JUMP Z, FILE_PUSH
COMP MASTER_STATE,2
JUMP Z, FILE_PUSH
COMP MASTER_STATE,3
JUMP Z, FILE_PUSH
COMP MASTER_STATE,4
JUMP Z, TWO_PUSH
COMP MASTER_STATE,5
JUMP Z, TWO_PUSH
COMP MASTER_STATE,6
JUMP Z, TWO_PUSH
COMP MASTER_STATE,7
JUMP Z, TWO_PUSH
COMP MASTER_STATE,8
JUMP Z, ONE_PUSH
COMP MASTER_STATE,9
JUMP Z, ONE_PUSH

MAIN_PUSH:
ADD LCD_BUILD, MENU_STATE
JUMP PUSH_PUSH

FILE_PUSH:
ADD LCD_BUILD, FILE_STATE
JUMP PUSH_PUSH

TWO_PUSH:
ADD LCD_BUILD, TWO_STATE
JUMP PUSH_PUSH

ONE_PUSH:
ADD LCD_BUILD, 0
JUMP PUSH_PUSH

PUSH_PUSH:

OUT LCD_BUILD, LCD_OUT


RET

















;///////////////////////////////////////////////////////////////////
;RW DSOUT $05
;RS DSOUT $06
;E DSOUT
;DATA DSOUT
;FILE SELECT
;PLAY_PAUSE_DELETE_DALL
;inputs select, up/down, left/right

;modes play, delete, record

;play file1...fileL

;delete file 1...fileL

;delete all

;record fileNext

;volume up/down



;//////////////////////////////////////////////////

;high bits d4-d7 then lower bits.


;outputs R/W RS E

